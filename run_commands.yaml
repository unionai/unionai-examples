tutorials/sentiment_classifier/sentiment_classifier.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples
  - union run --remote tutorials/sentiment_classifier/sentiment_classifier.py main --model distilbert-base-uncased
tutorials/reddit_slack_bot/reddit_slack_bot.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples
  - "# follow the example below to create secrets before running this command"
  - union run --remote tutorials/reddit_slack_bot/reddit_slack_bot.py reddit_wf --kickoff_time 2024-01-01 --lookback_days 1000
tutorials/time_series_forecasting/workflows/time_series_workflow.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/time_series_forecasting
  - union run --remote --copy-all workflows/time_series_workflow.py time_series_workflow --steps 5
tutorials/agentic_rag/agentic_rag.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/agentic_rag
  - "# create an OpenAI API key: https://platform.openai.com/api-keys, then run the following command"
  - union secrets create openai_api_key --value <your_openai_api_key>
  - "# create the vector store"
  - union run --remote agentic_rag.py create_vector_store --query "CRISPR therapy" --load_max_docs 10
  - "# run the RAG workflow"
  - union run --remote agentic_rag.py agentic_rag_workflow --user_message "Tell me about the latest CRISPR therapies"
tutorials/credit_default/credit_default.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/credit_default
  - union run --remote credit_default.py credit_default_wf
tutorials/genomic_alignment/genomic_alignment.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/genomic_alignment
  - union run --remote genomic_alignment.py alignment_wf
tutorials/soft_clustering_hdbscan/soft_clustering_hdbscan.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/soft_clustering_hdbscan
  - union run --remote soft_clustering_hdbscan.py hdscan_wf
tutorials/gluonts_time_series/gluonts_time_series.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/gluonts_time_series
  - union run --remote gluonts_time_series.py gluonts_wf
tutorials/video_translation/video_translation.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/video_translation
  - union run --remote --copy-all video_translation.py video_translation_wf
tutorials/liger_kernel_finetuning/liger_kernel_finetuning.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/liger_kernel_finetuning
  - "# create a huggingface key: https://huggingface.co/settings/tokens, then run the following command"
  - union secrets create huggingface_api_key --value <your_huggingface_api_key>
  - "# create a weights and biases key: https://wandb.ai/settings, then run the following command"
  - union secrets create wandb_api_key --value <your_wandb_api_key>
  - union run --remote liger_kernel_finetuning.py benchmarking_experiment --inputs-file phi3_inputs.yaml
tutorials/llama_edge_deployment/llama_edge_deployment.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/llama_edge_deployment
  - "# create a huggingface key: https://huggingface.co/settings/tokens, then run the following command"
  - union secrets create hf-api-key --value <your_huggingface_api_key>
  - "# create a weights and biases key: https://wandb.ai/settings, then run the following command"
  - union secrets create wandb-api-key --value <your_wandb_api_key>
  - "# ensure you replace the placeholders `WANDB_PROJECT`, `WANDB_ENTITY`, and `HF_REPO_ID` with the actual values."
  - union register llama_edge_deployment.py
  - union launchplan finetuning_completion_trigger --activate
  - "# run the fine-tuning workflow through the UI or by using the following command:"
  - union run --remote --copy-all llama_edge_deployment.py finetuning_wf
tutorials/vllm_serving_on_actor/ner.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/vllm_serving_on_actor
  - union run --remote upstream.py upstream_wf
  - "# follow the example below to create secrets before running this command"
  - union run --remote ner.py ner_wf
tutorials/wikipedia_embeddings_on_actor/wikipedia_embeddings_on_actor.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd wikipedia_embeddings_on_actor
  - "# create a huggingface key: https://huggingface.co/settings/tokens, then run the following command"
  - union secrets create hf-api-key --value <your_huggingface_api_key>
  - union run --remote wikipedia_embeddings_on_actor.py embed_wikipedia
tutorials/mochi_video_generation/mochi_video_generation.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd mochi_video_generation
  - union run --remote mochi_video_generation.py genmo_video_generation_with_actor
tutorials/nim_on_actor/nim_on_actor.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd nim_on_actor
  - union run --remote nim_on_actor.py batch_inference_wf
tutorials/nvidia_blueprints/pdf_to_podcast/union_workflow/pdf_to_podcast.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd nvidia_blueprints/pdf_to_podcast/union_workflow
  - union create secret nvidia-build-api-key
  - union create secret elevenlabs-api-key
  - union run --copy all --remote pdf_to_podcast.py pdf_to_podcast
tutorials/webhook/app.py:
  - git clone https://github.com/unionai/unionai-examples
  - cd unionai-examples/tutorials/webhook
  - union create secret --name WEBHOOK_API_KEY
  - union create api-key admin --name admin-union-api-key
  - "# Copy the UNION_API_KEY and create a secret with that value"
  - union create secret --name MY_UNION_API_KEY
  - union deploy apps app.py fastapi-webhook
